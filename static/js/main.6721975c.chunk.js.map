{"version":3,"sources":["features/chirps/chirpsSlice.js","App.jsx","reducers/index.js","index.js"],"names":["chirpsSlice","createSlice","name","initialState","reducers","addChirp","state","action","payload","username","message","created_at","id","Math","random","push","actions","mapDispatchToProps","connect","chirps","props","useState","setUsername","setMessage","value","onChange","e","target","type","onClick","preventDefault","Date","now","map","chirp","key","combineReducers","store","configureStore","reducer","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"mPAEMA,EAAcC,YAAY,CAC/BC,KAAM,SACNC,aAAc,GACdC,SAAU,CACTC,SADS,SACAC,EAAOC,GAAS,IAAD,EACmBA,EAAOC,QAAzCC,EADe,EACfA,SAAUC,EADK,EACLA,QAASC,EADJ,EACIA,WACrBC,EAAqB,IAAhBC,KAAKC,SAChBR,EAAMS,KAAK,CAAEH,KAAIH,WAAUC,UAASC,mBAKxBN,EAAaL,EAAYgB,QAAzBX,SAEAL,IAAf,QCmBMiB,EAAqB,CAAEZ,YAEda,eAHS,SAAC,GAAD,MAAiB,CAAEC,OAAnB,EAAGA,UAGaF,EAAzBC,EAjCH,SAAAE,GAAU,IAAD,EACYC,mBAAS,IADrB,mBACbZ,EADa,KACHa,EADG,OAEUD,mBAAS,IAFnB,mBAEbX,EAFa,KAEJa,EAFI,KAWpB,OACC,6BACC,8BACC,2BAAOC,MAAOf,EAAUgB,SAAU,SAAAC,GAAC,OAAIJ,EAAYI,EAAEC,OAAOH,QAAQI,KAAK,SACzE,2BAAOJ,MAAOd,EAASe,SAAU,SAAAC,GAAC,OAAIH,EAAWG,EAAEC,OAAOH,QAAQI,KAAK,SACvE,4BAAQC,QAZS,SAAAH,GACnBA,EAAEI,iBACFV,EAAMf,SAAS,CAAEI,WAAUC,UAASC,WAAYoB,KAAKC,QACrDV,EAAY,IACZC,EAAW,MAQT,cAED,6BACEH,EAAMD,OAAOc,KAAI,SAAAC,GAAK,OACtB,yBAAKC,IAAKD,EAAMtB,IACf,4BAAKsB,EAAMzB,SAAX,UACA,2BAAIyB,EAAMxB,kB,OCvBD0B,4BAAgB,CAC9BjB,WCGKkB,EAAQC,YAAe,CAC5BC,QAASC,IAGVC,IAASC,OACR,kBAAC,IAAD,CAAUL,MAAOA,GAChB,kBAAC,EAAD,OAEDM,SAASC,eAAe,W","file":"static/js/main.6721975c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst chirpsSlice = createSlice({\r\n\tname: 'chirps',\r\n\tinitialState: [],\r\n\treducers: {\r\n\t\taddChirp(state, action) {\r\n\t\t\tconst { username, message, created_at } = action.payload;\r\n\t\t\tconst id = Math.random() * 100000;\r\n\t\t\tstate.push({ id, username, message, created_at });\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const { addChirp } = chirpsSlice.actions;\r\n\r\nexport default chirpsSlice.reducer;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addChirp } from './features/chirps/chirpsSlice';\r\n\r\nconst App = props => {\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [message, setMessage] = useState('');\r\n\r\n\tconst handleClick = e => {\r\n\t\te.preventDefault();\r\n\t\tprops.addChirp({ username, message, created_at: Date.now() });\r\n\t\tsetUsername('');\r\n\t\tsetMessage('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form>\r\n\t\t\t\t<input value={username} onChange={e => setUsername(e.target.value)} type=\"text\" />\r\n\t\t\t\t<input value={message} onChange={e => setMessage(e.target.value)} type=\"text\" />\r\n\t\t\t\t<button onClick={handleClick}>Chirp It!</button>\r\n\t\t\t</form>\r\n\t\t\t<div>\r\n\t\t\t\t{props.chirps.map(chirp => (\r\n\t\t\t\t\t<div key={chirp.id}>\r\n\t\t\t\t\t\t<h1>{chirp.username} said:</h1>\r\n\t\t\t\t\t\t<p>{chirp.message}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ chirps }) => ({ chirps });\r\nconst mapDispatchToProps = { addChirp };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport chirps from '../features/chirps/chirpsSlice';\r\n\r\nexport default combineReducers({\r\n\tchirps\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = configureStore({\r\n\treducer: rootReducer\r\n});\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}